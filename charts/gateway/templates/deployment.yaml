apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "gateway.fullname" . }}
  labels:
    app: {{ template "gateway.name" . }}
    chart: {{ template "gateway.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "gateway.fullname" . }}
  replicas: {{ .Values.replicas }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  template:
    metadata:
      labels:
        app: {{ template "gateway.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "gateway.serviceAccountName" . }}
      {{- if .Values.affinity }}
      affinity: {{- toYaml .Values.affinity | nindent 12 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.global.schedulerName }}
      schedulerName: {{ .Values.global.schedulerName }}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers: {{- toYaml .Values.initContainers | nindent 12 }}
      {{- end }}
{{- if .Values.imagePullSecret.enabled }}
      imagePullSecrets:
        - name: {{ template "gateway.imagePullSecret" . }}
{{- end }}
      containers:
        {{- if .Values.sidecars }}
        {{- toYaml .Values.sidecars | nindent 8 }}
        {{- end }}
        - name: {{ .Chart.Name }}
          image: {{.Values.image.registry}}/{{.Values.image.repository}}:{{.Values.image.tag}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.installSolutionKits.enabled}}
          lifecycle:
            postStart:
              exec:
                command:
                  - '/bin/sh'
                  - '-c'
                  - |
                    declare -i restmanReadyAttempted=0
                    until [[ "$(curl --user {{ $.Values.management.username }}:{{ $.Values.management.password }} --silent --output /dev/null --write ''%{http_code}'' -k https://127.0.0.1:{{ $.Values.installSolutionKits.restmanPort }}/restman/1.0/doc/)" == "200" ]]; do
                      if [ "$((++restmanReadyAttempted))" -ge {{ $.Values.installSolutionKits.restmanReadyWaitMaxAttempt }} ]; then
                        echo "Max restman ready wait attempted (max={{ $.Values.installSolutionKits.restmanReadyWaitMaxAttempt }}, interval={{ $.Values.installSolutionKits.restmanReadyWaitInterval }} )." >&2
                        exit 1
                      fi
                      sleep {{ $.Values.installSolutionKits.restmanReadyWaitInterval }}
                    done
                    {{- range .Values.installSolutionKits.solutionKits }}
                    {{ .preInstallCommand }}
                    curl --user {{ $.Values.management.username }}:{{ $.Values.management.password }} -k https://127.0.0.1:{{ $.Values.installSolutionKits.restmanPort }}/restman/1.0/solutionKitManagers {{ .param }} --form "file=@/tmp/{{ .file }}"
                    {{ .postInstallCommand }}
                    {{- end }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }} 
              containerPort: {{ .internal }}
              protocol: {{ .protocol }}
            {{- end }}
            {{ if .Values.management.service.enabled}}
            {{- range .Values.management.service.ports }}
            - name: {{ .name }} 
              containerPort: {{ .internal }}
              protocol: {{ .protocol }}
            {{- end }}
            {{ end }}
          volumeMounts:
            - name: {{ template "gateway.fullname" . }}-license-xml
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/bootstrap/license/license.xml
              subPath: license.xml
            - name: {{ template "gateway.fullname" . }}-system-properties
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/conf/system.properties
              subPath: system.properties
{{- if or (.Values.hazelcast.enabled) (.Values.hazelcast.external) }}
            - name: {{ template "gateway.fullname" . }}-hazelcast-client
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/bootstrap/assertions/ExternalHazelcastSharedStateProviderAssertion/hazelcast-client.xml
              subPath: hazelcast-client.xml
{{- end }}
{{- if .Values.serviceMetrics.enabled }}
            - name: {{ template "gateway.fullname" . }}-service-metrics-configmap
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/bootstrap/bundle/servicemetrics
{{- end }}
{{- if .Values.config.log.override }}
            - name: {{ template "gateway.fullname" . }}-log-config-override
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/conf/log-override.properties
              subPath: log-override.properties
{{- end }}
{{- if .Values.config.cwp.enabled }}
            - name: {{ template "gateway.fullname" . }}-cwp-configmap
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/bootstrap/bundle/cwp
{{- end }}
{{- if .Values.config.listenPorts.custom.enabled }}
            - name: {{ template "gateway.fullname" . }}-listenport-configmap
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/bootstrap/bundle/listenports
{{- end }}
{{- if .Values.bundle.enabled }}
            - name: {{ template "gateway.fullname" . }}-bundle-configmap
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/bootstrap/bundle/configmap
{{- end }}
{{- if .Values.management.restman.enabled }}
            - name: {{ template "gateway.fullname" . }}-restman
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/bootstrap/services/restman
{{- end }}
{{- if .Values.existingBundle.enabled }}
           {{- range .Values.existingBundle.configMaps }}
            - name: {{ .name }}
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/bootstrap/bundle/{{ .name }}
           {{- end }}
           {{- range .Values.existingBundle.secrets }}
            - name: {{ .name }}
              mountPath: /opt/SecureSpan/Gateway/node/default/etc/bootstrap/bundle/{{ .name }}
              {{ if .csi }}
              readOnly: {{ .csi.readOnly }}
              {{ end }}
           {{- end }}
{{- end }}
{{- if .Values.management.kubernetes.loadServiceAccountToken }}
            - name: {{ template "gateway.fullname" . }}-service-account-token-script
              mountPath: /opt/docker/rc.d/002-load-service-account-token.sh
              subPath: 002-load-service-account-token.sh
            - name: {{ template "gateway.fullname" . }}-service-account-token-template
              mountPath: /opt/docker/rc.d/base/update-service-account-token.xml
              subPath: update-service-account-token.xml
{{- end }}
{{- if .Values.initContainers }}
           {{- range .Values.initContainers }}
           {{- range .volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{ if .subPath }}
              subPath: {{ .subPath }}
              {{ end }}
           {{- end }}
           {{- end }}
{{- end }}
{{- if .Values.sidecars }}
           {{- range .Values.sidecars }}
           {{- range .volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{ if .subPath }}
              subPath: {{ .subPath }}
              {{ end }}
           {{- end }}
           {{- end }}
{{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "gateway.fullname" . }}-configmap
            - secretRef:
                name: {{ template "gateway.secretName" . }}
{{- if .Values.tls.useSignedCertificates }}
            - secretRef:
                name: {{ template "gateway.tlsSecretName" . }}
{{- end }}
{{- if .Values.livenessProbe.enabled }}
          livenessProbe:
{{- if (eq .Values.livenessProbe.type "httpGet" ) }}
            httpGet:
              path: {{ .Values.livenessProbe.path | default "/ssg/ping"}}
              port: {{ .Values.livenessProbe.port | default 8443 }}
              scheme: {{ .Values.livenessProbe.scheme | default "HTTPS" }}
{{- else }}
            exec:
              command:
              - /bin/bash
              - {{ .Values.livenessProbe.command | default "/opt/docker/rc.d/diagnostic/health_check.sh" }}
{{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
{{- end }}
{{- if .Values.readinessProbe.enabled }}
          readinessProbe:
{{- if (eq .Values.readinessProbe.type "httpGet" ) }}
            httpGet:
              path: {{ .Values.readinessProbe.path | default "/ssg/ping"}}
              port: {{ .Values.readinessProbe.port | default 8443 }}
              scheme: {{ .Values.readinessProbe.scheme | default "HTTPS" }}
{{- else }}
            exec:
              command:
              - /bin/bash
              - {{ .Values.readinessProbe.command | default "/opt/docker/rc.d/diagnostic/health_check.sh" }}
{{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
{{- if .Values.customHosts.enabled }}
      hostAliases:
{{ toYaml .Values.customHosts.hostAliases | indent 12 }}
{{- end }}
{{- end }}
      volumes:
        - name: {{ template "gateway.fullname" . }}-license-xml
          secret:
            secretName: {{ template "gateway.license" . }}
            items:
            - key: license
              path: license.xml
        - name: {{ template "gateway.fullname" . }}-system-properties
          configMap:
            name: {{ template "gateway.fullname" . }}-configmap
            items:
            - key: system-properties
              path: system.properties
{{- if or (.Values.hazelcast.enabled) (.Values.hazelcast.external) }}
        - name: {{ template "gateway.fullname" . }}-hazelcast-client
          configMap:
            name: {{ template "gateway.fullname" . }}-configmap
            items:
            - key: hazelcast-xml
              path: hazelcast-client.xml
{{- end }}
{{- if .Values.config.log.override }}
        - name: {{ template "gateway.fullname" . }}-log-config-override
          configMap:
            name: {{ template "gateway.fullname" . }}-configmap
            items:
            - key: log-override-properties
              path: log-override.properties
{{- end }}
{{- if .Values.config.cwp.enabled }}
        - name: {{ template "gateway.fullname" . }}-cwp-configmap
          configMap:
            defaultMode: 292
            optional: false
            name: {{ template "gateway.fullname" . }}-cwp-configmap
{{- end }}
{{- if .Values.config.listenPorts.custom.enabled }}
        - name: {{ template "gateway.fullname" . }}-listenport-configmap
          configMap:
            defaultMode: 292
            optional: false
            name: {{ template "gateway.fullname" . }}-listenport-configmap
{{- end }}
{{- if .Values.bundle.enabled }}
        - name: {{ template "gateway.fullname" . }}-bundle-configmap
          configMap:
            defaultMode: 292
            optional: false
            name: {{ template "gateway.fullname" . }}-bundle-configmap
{{- end }}
{{- if .Values.serviceMetrics.enabled }}
        - name: {{ template "gateway.fullname" . }}-service-metrics-configmap
          configMap:
            defaultMode: 292
            optional: false
            name: {{ template "gateway.fullname" . }}-service-metrics-configmap
{{- end }}
{{- if .Values.management.restman.enabled }}
        - name: {{ template "gateway.fullname" . }}-restman
          emptyDir: {}
{{- end }}
{{- if .Values.management.kubernetes.loadServiceAccountToken }}
        - name: {{ template "gateway.fullname" . }}-service-account-token-script
          configMap:
            name: {{ template "gateway.fullname" . }}-configmap
            items:
            - key: 002-load-service-account-token
              path: 002-load-service-account-token.sh
        - name: {{ template "gateway.fullname" . }}-service-account-token-template
          configMap:
            name: {{ template "gateway.fullname" . }}-configmap
            items:
            - key: update-service-account-token
              path: update-service-account-token.xml
{{- end }}
{{- if .Values.existingBundle.enabled }}
     {{- range .Values.existingBundle.configMaps }}
        - name: {{ .name }}
      {{- if .configMap }}
          configMap: {{ toYaml .configMap | nindent 12 }}
      {{- else }}
          configMap:
            defaultMode: 292
            optional: false
            name: {{ .name }}
      {{- end }}
     {{- end }}
     {{- range .Values.existingBundle.secrets }}
        - name: {{ .name }}
      {{- if .csi }}
          csi: {{ toYaml .csi | nindent 12 }}
      {{- else }}
          secret:
            secretName: {{ .name }}
      {{- end }}
     {{- end }}
{{- end }}
{{- if .Values.initContainers }}
     {{- range .Values.initContainers }}
     {{- range .volumeMounts }}
        - name: {{ .name }}
          emptyDir: {}
     {{- end }}
     {{- end }}
{{- end }}
{{- if .Values.sidecars }}
     {{- range .Values.sidecars }}
     {{- range .volumeMounts }}
        - name: {{ .name }}
          emptyDir: {}
     {{- end }}
     {{- end }}
{{- end }}

{{- if and (not .Values.disklessConfig.enabled) (not .Values.disklessConfig.existingSecretName) }}
apiVersion: v1
kind: Secret
metadata:
  name:  {{ template "gateway.node.properties" . }}
  labels:
    app: {{ template "gateway.name" . }}
    chart: {{ template "gateway.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- range $key, $val := .Values.additionalLabels }}
    {{ $key }}: "{{ $val }}"
    {{- end }}  
  annotations:
    description: template for gateway node.properties
    {{- if  .Values.additionalAnnotations }}
    {{- range $key, $val := .Values.additionalAnnotations }}
    {{ $key }}: "{{ $val }}"
    {{- end }}
  {{- end }}
type: Opaque
stringData:
  node.properties: |+
    node.cluster.pass={{ .Values.clusterPassword }}
    admin.user={{ .Values.management.username }}
    admin.pass={{ .Values.management.password }}
    {{- if .Values.database.enabled }}
    {{- if .Values.database.create }}
    node.db.config.main.host={{ .Release.Name }}-mysql
    node.db.config.main.port=3306
    node.db.config.main.name={{ .Values.database.name }}
    {{- else }}
    node.db.config.main.host={{ required "Please set .Values.database.jdbcURL, this should be your database host only" .Values.database.jdbcURL }}
    node.db.config.main.port={{ default 3306 .Values.database.jdbcPort }}
    {{- end }}
    node.db.config.main.user={{ .Values.database.username }}
    node.db.config.main.pass={{ .Values.database.password }}
    {{- end }}
{{- end }}
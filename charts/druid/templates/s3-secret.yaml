{{- if ( not .Values.global.deepStorage.existingConfigSecret) }}
{{- $access_key_admin := randAlphaNum 16 -}}
{{- $secret_key_admin := randAlphaNum 16 -}}
{{- $access_key_read := randAlphaNum 16 -}}
{{- $secret_key_read := randAlphaNum 16 -}}
{{if .Values.global.deepStorage.s3AdminAccessKey }}
  {{- $access_key_admin := .Values.global.deepStorage.s3AdminAccessKey -}}
{{ end }}
{{if .Values.global.deepStorage.s3AdminSecretKey }}
  {{- $secret_key_admin := .Values.global.deepStorage.s3AdminSecretKey -}}
{{ end }}
{{if .Values.global.deepStorage.s3ReadAccessKey }}
  {{- $access_key_read := .Values.global.deepStorage.s3ReadAccessKey -}}
{{ end }}
{{if .Values.global.deepStorage.s3ReadSecretKey }}
  {{- $secret_key_read := .Values.global.deepStorage.s3ReadSecretKey -}}
{{ end }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: seaweedfs-s3-secret
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook": "pre-install"
  labels:
    chart: {{ template "druid.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
stringData:
  admin_access_key_id: {{ $access_key_admin }}
  admin_secret_access_key: {{ $secret_key_admin }}
  read_access_key_id: {{ $access_key_read }}
  read_secret_access_key: {{ $secret_key_read }}
  seaweedfs_s3_config: '{"identities":[{"name":"anvAdmin","credentials":[{"accessKey":"{{ $access_key_admin }}","secretKey":"{{ $secret_key_admin }}"}],"actions":["Admin","Read","Write"]},{"name":"anvReadOnly","credentials":[{"accessKey":"{{ $access_key_read }}","secretKey":"{{ $secret_key_read }}"}],"actions":["Read"]}]}'
{{- end }}

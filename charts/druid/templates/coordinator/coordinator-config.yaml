apiVersion: v1
kind: ConfigMap
metadata:
  name: coordinator-config
  labels:
    app: coordinator
    chart: {{ template "druid.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  SERVICE_NAME: {{ .Values.coordinator.hostname }}
  ZOOKEEPER_HOST: {{ .Values.zookeeper.hostname }}
  ZOOKEEPER_PORT: {{ .Values.zookeeper.port | quote }}
  MINIO_URL: http://minio:9000
  MINIO_BUCKET: {{ .Values.minio.bucketName }}
  DATABASE_TYPE: {{ required "Please fill in databaseType in values.yaml" .Values.global.databaseType | quote }}
{{ if .Values.global.setupDemoDatabase}}
  DATABASE_HOST: {{ .Release.Name }}-{{ .Values.global.databaseHost }}
{{ else }}
  DATABASE_HOST: {{ .Values.global.databaseHost | quote }}
{{ end }}
  DATABASE_PORT: {{ include "database-port" . | quote }}
  DATABASE_USE_SSL: {{ .Values.global.databaseUseSSL | quote }}
  DATABASE_REQUIRE_SSL: {{ .Values.global.databaseRequireSSL | quote }}
  DRUID_DATABASE_NAME: {{ include "druid-db-name" . | quote }}
  runtime.properties: |-
    druid.service=druid/coordinator
    druid.plaintextPort=8081
    
    druid.coordinator.startDelay=PT30S
    druid.coordinator.period=PT30S
    druid.coordinator.asOverlord.enabled=true
    druid.coordinator.asOverlord.overlordService=druid/overlord
    druid.indexer.runner.type=remote
    druid.indexer.storage.type=metadata
    druid.coordinator.kill.on=true
    druid.coordinator.kill.period=P1D
    druid.coordinator.kill.durationToRetain=PT1H
    druid.coordinator.kill.maxSegments=25
    druid.storage.bucket={{ .Values.minio.bucketName }}
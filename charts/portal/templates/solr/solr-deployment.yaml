apiVersion: apps/v1
kind: Deployment
metadata:
  name: solr
  labels:
    app: solr
    chart: {{ template "portal.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: solr
  {{- if .Values.solr.strategy }}
  strategy: {{- toYaml .Values.solr.strategy | nindent 12 }}
  {{- end }}
  replicas: {{ .Values.solr.replicaCount }}
  template:
    metadata:
      labels:
        app: solr
    spec:
      serviceAccountName: {{ include "portal.serviceAccountName" . }}
      {{- if .Values.solr.nodeSelector }}
      nodeSelector: {{- toYaml .Values.solr.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.global.schedulerName }}
      schedulerName: "{{ .Values.global.schedulerName }}"
      {{- end }}
      containers:
        - name: solr
          image: "{{ .Values.global.portalRepository }}{{ .Values.image.solr }}"
          imagePullPolicy: "{{ .Values.solr.image.pullPolicy }}"
          envFrom:
          - configMapRef:
              name: solr-config
          ports:
            - containerPort: 8983
              name: solr
          readinessProbe:
            httpGet:
              path: /solr
              port: 8983
            initialDelaySeconds: 10
            timeoutSeconds: 1
          livenessProbe:
            exec:
              command:
                - livenesscheck
            timeoutSeconds: 1
          resources:
          {{- if .Values.solr.resources }}
          resources: {{- toYaml .Values.solr.resources | nindent 12 }}
          {{- end }}
      {{- if .Values.global.pullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.global.pullSecret }}"
      {{- end }}
      restartPolicy: Always